// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc, 2021.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-butano/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/butano/tree/LICENSE
#divert <fpp>
#import std.int64_t
#import std.chrono.duration
#import std.milli
#import std.deci
#import std.chrono.milliseconds
#import std.is_same
namespace want::timeline {
  using Representation = std::int64_t; // choosing this representation
  template<typename PERIOD> using Duration = std::chrono::duration<Representation, PERIOD>;
  using std::chrono::duration_cast;
}
namespace want::timeline::duration {
  using Milliseconds = std::chrono::duration<Representation, std::milli>;
  using Deciseconds = std::chrono::duration<Representation, std::deci>;
  using Seconds = std::chrono::duration<Representation>;
  static_assert(std::is_same<Milliseconds, std::chrono::milliseconds>::value);
}
#endiv
