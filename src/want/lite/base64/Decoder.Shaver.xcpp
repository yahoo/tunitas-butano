// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc, 2021.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-butano/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/butano/tree/LICENSE
#divert <fpp>
#import want.lite.base64.Decoder
#endiv
#divert <hpp>
template<typename UNSIGNED> struct want::lite::base64::Decoder::Shaver {
  //
  // Shave out the bits, little endian out first.
  //
  using Value = UNSIGNED;
  Value value;
  Shaver(Value value) : value(value) { }
  auto operator*() const -> bool { return value & 01; }
  auto operator++() -> Shaver & { value >>= 1;  return *this; }
  auto operator++(int) -> Shaver {
    Shaver old(*this);
    operator++();
    return old;
  }
};
#endiv
