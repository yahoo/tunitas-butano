# This is a GNU -*- Makefile -*- fragment that is included by Automake
# Copyright Yahoo Inc. 2021
# Licensed under the terms of the Apache-2.0 license.
# For terms, see the LICENSE file at https://github.com/yahoo/tunitas-butano/blob/master/LICENSE
# For terms, see the LICENSE file at https://git.tunitas.technology/all/components/butano/tree/LICENSE

check_bin_unit = check/bin/unit
# WATCHOUT -- -ltunitas-butano-generation entails -ltunitas-butano-tcf entails -ltunitas-butano entails -ltunitas
# WATCHOUT -- but we want to ensure that -ltunitas-butano-generation is not always required; this tester does not prove that
check_bin_unit_LDADD = \
  $(lib_libtunitas_butano_generation_la) \
  $(lib_libtunitas_butano_tcf_la) \
  $(lib_libwant_la) \
  -lrigging-bench-module \
  $(end)
$(check_bin_unit_OBJECTS): AM_CPPFLAGS+=$(AND_CHECK_CPPFLAGS_SET)
$(check_bin_unit_OBJECTS): AM_CXXFLAGS+=$(AND_CHECK_CXXFLAGS_SET) -Wno-deprecated-declarations
# reminder: autotools does not put $(AM_LDFLAGS) into check_bin_unit_LDFLAGS, like it does with CPPFLAGS and CXXFLAGS
check_bin_unit_LDFLAGS = $(CHECK_LDFLAGS_SET)
check_bin_unit_MODULES = $(call TF_SOURCEStoMODULES, $(check_bin_unit_SOURCES))
check_bin_unit_SOURCES = \
  obj/src/tunitas/butano/tcf/consent/Builder.test.Access.cpp \
  obj/src/tunitas/butano/tcf/consent/Object.test.Access.cpp \
  obj/src/want/lite/base64/Decoder.test.Access.cpp \
  obj/src/want/lite/base64/Encoder.test.Access.cpp \
  \
  obj/src/tests/unit/main.cpp \
  obj/src/tests/unit/namespace.cpp \
  obj/src/tests/unit/printable.cpp \
  obj/src/tests/unit/detail.Printable.cpp \
  \
  obj/src/tests/unit/butano.Fixture.cpp \
  obj/src/tests/unit/generation.Fixture.cpp \
  obj/src/tests/unit/randomness.Fixture.cpp \
  obj/src/tests/unit/tcf.Fixture.cpp \
  obj/src/tests/unit/want.Fixture.cpp \
  $(end)
$(scold_cxxdir)/tests/unit/dependencies.mk: $(check_bin_unit_SOURCES)
$(check_bin_unit_SOURCES) : obj/src/%.cpp : src/%.xcpp
	$(TF_V_DIS) $(call TF_XCPP2CPP, $^)
	$(TF_V_DONE) test -e $@
$(scold_cxxdir)/tests/unit/dependencies.mk:
	$(TF_V_DEP) $(call TF_DEPENDENCIES, $^)
	$(TF_V_DONE) test -e $@
include $(scold_cxxdir)/tests/unit/dependencies.mk
clean-dependencies::
	rm -f $(scold_cxxdir)/tests/unit/dependencies.mk
