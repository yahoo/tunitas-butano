// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright 2018, 2019, Oath Inc.; Copyright 2020, Verizon Media
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-butano/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/butano/tree/LICENSE
#divert <fpp>
namespace tunitas::butano::tcf::consent::protocol {
  //
  // An exception
  // The consent::protocol is decode has failed. Here's why.
  //
  // Usage:
  //
  //   throw Decode{}
  //
  class Decode;
}
#endiv
#divert <hpp>
#import tunitas.butano.tcf.Exception
#import tunitas.butano.tcf.exception.Range
#import sstream
#import stdexcept
class tunitas::butano::tcf::consent::protocol::Decode : public std::runtime_error, public tcf::Exception {
  using ancestor = std::runtime_error;
public:
  inline Decode();
  inline explicit Decode(std::string const &reason);
  inline auto what() const noexcept -> char const * final;
};
#endiv
#divert <ipp>
namespace tunitas::butano::tcf::consent::protocol {
  Decode::Decode()
    : ancestor("decode")
  { }
  Decode::Decode(std::string const &reason)
    : ancestor(reason)
  { }
  auto Decode::what() const noexcept -> char const * {
    return ancestor::what();
  }
}
#endiv
