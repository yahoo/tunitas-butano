// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc. 2021.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-butano/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/butano/tree/LICENSE
#divert <fpp>
namespace tunitas::butano::tcf::format {
  namespace detail { enum Native { }; }
}
#endiv
#divert <hpp>
#import tunitas.butano.tcf.format.detail.Formatter
#import tunitas.butano.tcf.consent.Object
namespace tunitas::butano::tcf::format {
  // ADL will NOT find it
  inline auto native(consent::Object o) -> detail::Formatter<detail::Native, consent::Object>;
  namespace detail {
    // ADL will find it
    template<> inline auto operator<<(std::ostream &os, Formatter<Native, consent::Object> const &co) -> std::ostream &;
  }
}
#endiv
#divert <ipp>
namespace tunitas::butano::tcf {
  inline auto format::native(consent::Object o) -> detail::Formatter<detail::Native, consent::Object> {
    return detail::Formatter<detail::Native, consent::Object>(o);
  }
  template<> inline auto format::detail::operator<<(std::ostream &os, Formatter<Native, consent::Object> const &co) -> std::ostream & {
    return os << co.value; // [[FIXTHIS]] ... ahem, which may be exactly the same as "dump" ... for now, or forever
  }
}
#endiv
