// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright 2018, 2019, Oath Inc.; Copyright 2020, Verizon Media
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-butano/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/butano/tree/LICENSE
#divert <fpp>
#import std.string
#import std.deque
namespace app::argv {
  //
  // Because you'd rather work with STL containers and std::strings
  // than hacking C pointers and offsets.
  //
  // Is its own class so that ADL will find it here.
  //
  // Usage:
  //
  //   auto main(Argv av) -> int {
  //     ...dostuff
  //   }
  //   auto main(int c, char *v[]) -> int {
  //     Argv av(&v[0], &v[c])
  //     return main(std::move(av, ac));
  //   }
  //
  class Object;
}
#endiv
#divert <hpp>
class app::argv::Object : public std::deque<std::string> {
  using Ancestor = std::deque<std::string>;
public:
  Object() = default;
  using Ancestor::deque;
  // just like in main(...)
  inline Object(int c, char *v[]);
};
#endiv
#divert <ipp>
app::argv::Object::Object(int c, char *v[])
  : Ancestor(&v[0], &v[c])
{ }
#endiv

