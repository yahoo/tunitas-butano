// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright 2018, 2019, Oath Inc.; Copyright 2020, Verizon Media
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-butano/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/butano/tree/LICENSE
#divert <fpp>
namespace want::lite::base64::decoder {
  //
  // An invalid get<...>(...) operation out of the base64 decoder bitstream.
  //
  // Usage:
  //
  //   throw decoder::Get("zero size");
  //
  class Get;
}
#endiv
#divert <hpp>
#import std.invalid_argument
#import want.lite.base64.Exception
class want::lite::base64::decoder::Get : public std::invalid_argument, public base64::Exception {
  using ancestor = std::invalid_argument;
public:
  inline Get() : ancestor("get") { }
  using ancestor::invalid_argument;
  auto what() const noexcept -> char const * { return ancestor::what(); }
};
#endiv
