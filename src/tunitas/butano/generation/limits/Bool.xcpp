// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc, 2021.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-butano/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/butano/tree/LICENSE
#divert <fpp>
namespace tunitas::butano::generation::limits {
  //
  // A 'bool' is a special sort of enumeration
  // It requires special treatment because it does not fit in the memory model of C++
  //
  // It is "1 bit wide" in the data layout.
  // It is "1 byte wide" in the memory layout, but we must avoid that interpretation.
  //
  struct Bool;
}
#endiv
#divert <hpp>
namespace tunitas::butano::generation {
  struct limits::Bool {
    using Value = bool;
    static constexpr auto min() -> Value { return false; }
    inline static constexpr auto minimum = false;;
    static constexpr auto max() -> Value { return true; }
    inline static constexpr auto maximum = true;
  };
}
#endiv
