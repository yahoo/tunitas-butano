// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc. 2021.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-butano/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/butano/tree/LICENSE
#divert <fpp>
#import tunitas.butano.tcf.detail.Bitfield
#import tunitas.butano.tcf.id.ALL
#import tunitas.butano.tcf.purpose.Null
#import tunitas.butano.tcf.purpose.Invalid
namespace tunitas::butano::tcf::purpose {
  //
  // The purpose bitfield is a 1-based vector<bool>
  // whereas the standard vector<bool> is a 0-based array.
  // This becomes significant when encoding & decoding
  //
  // Also, the Bitfield is indexable by id::Purpose, not by unsigned size_t
  //
  // Usage: (same as std::vector<bool>)
  //
  using Bitfield = tcf::detail::Bitfield<id::Purpose, purpose::Null, purpose::Invalid>;
}
#endiv
