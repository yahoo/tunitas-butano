// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright 2018, 2019, Oath Inc.; Copyright 2020, Verizon Media
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-butano/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/butano/tree/LICENSE
#divert <hpp>
#forward tests.unit.detail.Printable
namespace tests::unit {
  //
  // Ensure that the TYPE is printable.
  // To wit, at least:
  //
  // Behavior:
  //
  //    TYPE              Special Care
  //    ----              ------------
  //    std::byte         print as "hex bytes"
  //    char              print safely 
  //    unsigned char     these are small integers
  //    signed char       these are small integers
  //    ...otherwise...   whatever operator<< does
  //
  // Usage:
  //
  //   auto thing = ...something...
  //   cout << printable(thing);
  //
  template<typename TYPE> inline auto printable(TYPE const &) -> detail::Printable<TYPE>;
}
#endiv
#divert <ipp>
#import tests.unit.detail.Printable
template<typename TYPE>  auto tests::unit::printable(TYPE const &subject) -> detail::Printable<TYPE> {
  return detail::Printable<TYPE>{subject};
}
#endiv
