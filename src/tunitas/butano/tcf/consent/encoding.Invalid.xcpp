// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright 2018-2019, Oath Inc.
// Licensed under the terms of the Apache-2.0 license. See the LICENSE file in https://github.com/yahoo/tunitas-butano/blob/master/LICENSE for terms.
#divert <fpp>
namespace tunitas::butano::tcf::consent::encoding {
  //
  // The encoding (Encoding enum) is invalid (out of the acceptable range of BITS or RANGE)
  //
  class Invalid;
}
#endiv
#divert <hpp>
#import tunitas.butano.tcf.Exception
#import std.out_of_range
#import std.string
class tunitas::butano::tcf::consent::encoding::Invalid : public std::out_of_range, public tcf::Exception {
  using ancestor = std::out_of_range;
public:
  inline Invalid() : ancestor("invalid encoding") { }
  inline explicit Invalid(std::string const &reason) : ancestor(reason) { }
  inline auto what() const noexcept -> char const * final { return ancestor::what(); }
};
#endiv
