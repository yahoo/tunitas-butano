// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright 2018-2019, Oath Inc.
// Licensed under the terms of the Apache-2.0 license. See the LICENSE file in https://github.com/yahoo/tunitas-butano/blob/master/LICENSE for terms.
#divert <fpp>
namespace tunitas::butano::tcf {
  //
  // A mixin to allow "all iab.tcf exceptions" to be identified
  // yet while allowing the individual exceptions to be flavored from
  // the leaf of the <stdexcept> tree of from any other source.
  //
  // Usage:
  //
  //     class some::Exception : public std::invalid_argument, public iab::tcf::Exception {
  //        using ancestor = std::invalid_argument;
  //     public:
  //        inline ... Exception(...);
  //     };
  //
  //     try {
  //         ...
  //         throw some::Exception(...);
  //         ...
  //     } catch (iab::tcf::Exception const &) {
  //         ...downcast and handle it on your own time...
  //
  class Exception;
}
#endiv
#divert <hpp>
class tunitas::butano::tcf::Exception {
protected:
  virtual ~Exception() = default;
  Exception() = default;
public:
  virtual auto what() const noexcept -> char const * = 0;
};
#endiv
