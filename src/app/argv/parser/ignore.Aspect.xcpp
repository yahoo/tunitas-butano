// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright 2019, Oath Inc.; Copyright 2020, Verizon Media
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-butano/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/butano/tree/LICENSE
#divert <fpp>
namespace app::argv::parser::ignore {
  //
  // The ignore aspect of the parser system.
  // The 'ignore errors' flag is provided.
  // Descendants only.
  //
  // Usage:
  //
  //  class parse::Something : public parser::Basis, public parser::ignore::Aspect {
  //    ...other declarations...
  //  };
  //
  //  auto remain(...) -> void {
  //    parse::Something pa(...)
  //    ...do something might establishe 'there_are_errors'
  //    if (there_are_errors) {
  //      if (!pa.ignore_errors()) {
  //        throw Quitting(1);
  //      }
  //    }
  //  }
  //
  class Aspect;
}
#endiv
#divert <hpp>
class app::argv::parser::ignore::Aspect {
protected:
  ~Aspect() = default;
  Aspect() : parsing_ignore_errors(false) { }
public:
  inline auto ignore_errors() -> bool { return parsing_ignore_errors; }
protected:
  bool parsing_ignore_errors;
};
#endiv
