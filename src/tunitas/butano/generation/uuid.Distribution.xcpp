// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc, 2021.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-butano/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/butano/tree/LICENSE
#divert <fpp>
namespace tunitas::butano::generation::uuid {
  //
  // A (random) uuid distribution
  //
  // Combined with an Engine and wrapped in a Generator as per the usual pattern in these things.
  //
  // Usage:
  //
  //   Engine engine{...seeding...}
  //   Distribution distribution;
  //   uuid::Container uu = distribution(engine);
  //
  class Distribution;
}
#endiv
#divert <hpp>
#import tunitas.butano.generation.randomness.Engine
#import tunitas.butano.generation.randomness.Distribution.
#import uuid.Container
class tunitas::butano::generation::uuid::Distribution {
public:
  Distribution() = default;
  using Engine = randomness::Engine;
  using Value = ::uuid::Container;
  using Result = Value;
  inline auto operator()(Engine &) -> Result;
protected:
  randomness::Distribution<unsigned char> subdistribution;
};
#endiv
#divert <ipp>
namespace tunitas::butano::generation::uuid {
  auto Distribution::operator()(Engine &engine) -> Result {
    Result specimen;
    for (auto &byte : specimen.value) {
      byte = subdistribution(engine);
    }
    return specimen;
  }
}
#endiv
