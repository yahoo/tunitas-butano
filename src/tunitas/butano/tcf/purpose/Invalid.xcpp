// This is C++2a -*- c++ -*- in the S.C.O.L.D. Stylings that are so popular these days
// Copyright Verizon Media (c) 2018-2019, the license statement is nearby; licensable under Apache 2.0
#divert <fpp>
namespace tunitas::butano::tcf::purpose {
  //
  // The purpose is totally invalid (out of the acceptable range of 0..24, of 5 bits).
  // See the commentariat in detail::Out_Of_Range for semantic fitness and purpose.
  //
  // The null purpose is a "valid" purpose.  Instead throw Null for the null purpose.
  // If the purpose is outside of 0..24, then throw Inappropriate.
  //
  // Usage:
  //
  //   throw Invalid();
  //
  class Invalid;
}
#endiv
#divert <hpp>
#import tunitas.butano.tcf.purpose.detail.Out_Of_Range
class tunitas::butano::tcf::purpose::Invalid : public detail::Out_Of_Range {
  using ancestor = detail::Out_Of_Range;
public:
  inline Invalid();
  using ancestor::Out_Of_Range;
  inline Invalid(Identifier offending_id, tcf::exception::Range range);
};
#endiv
#divert <ipp>
#import tunitas.butano.tcf.purpose.detail.Out_Of_Range
namespace tunitas::butano::tcf::purpose {
  Invalid::Invalid()
    : ancestor("invalid purpose")
  { }
  Invalid::Invalid(Identifier offending_id, tcf::exception::Range range)
    : ancestor(format("Purpose", "invalid", offending_id, range))
  { }
}
#endiv
