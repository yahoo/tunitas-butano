// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright 2019, Oath Inc.; Copyright 2020, Verizon Media
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-butano/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/butano/tree/LICENSE
#divert <fpp>
namespace tunitas::butano::tcf::purpose {
  //
  // The purpose is null (zero)
  // See the commentariat in detail::Out_Of_Range for semantic fitness and purpose.
  //
  // Usage:
  //
  //   throw Null();
  //
  class Null;
}
#endiv
#divert <hpp>
#import tunitas.butano.tcf.Exception
#import tunitas.butano.tcf.id.ALL
#import stdexcept
class tunitas::butano::tcf::purpose::Null : public std::out_of_range, public tcf::Exception {
  using Ancestor = std::out_of_range;
public:
  inline Null();
  inline auto what() const noexcept -> char const * final;
};
#endiv
#divert <ipp>
namespace tunitas::butano::tcf::purpose {
  Null::Null()
    : Ancestor("null purpose")
  { }
  auto Null::what() const noexcept -> char const * {
    return Ancestor::what();
  }
}
#endiv
