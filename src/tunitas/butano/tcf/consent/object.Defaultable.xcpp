// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright 2018, 2019, Oath Inc.; Copyright 2020, Verizon Media
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-butano/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/butano/tree/LICENSE
#divert <fpp>
namespace tunitas::butano::tcf::consent::object {
  //
  // The defaultable members of Object
  //
  // Usage:
  //
  //   see consent::Object
  //
  class Defaultable;
}
#endiv
#divert <hpp>
#import tunitas.butano.tcf.id.ALL
#import tunitas.butano.tcf.consent.Encoding
#import tunitas.butano.tcf.consent.encode
#forward tunitas.butano.tcf.consent.encoding.Getter
#forward tunitas.butano.tcf.consent.encoding.getter.Field
#import tunitas.butano.tcf.consent.protocol.Field
#import tunitas.butano.tcf.consent.protocol.Time
#import std.string
class tunitas::butano::tcf::consent::object::Defaultable {
protected:
  ~Defaultable() = default;
protected:
  inline Defaultable();
protected:
  // Get a Concept!  THING can meaningfully be consent::Builder or consent::Object
  template<typename THING> friend auto consent::encode(THING const &) -> std::string;
  template<typename> friend struct encoding::Getter;
  template<protocol::Field> friend struct encoding::getter::Field;
  id::version::Protocol version;
  protocol::Time created;
  protocol::Time lastUpdated;
  id::Platform cmpId;
  id::version::Platform cmpVersion;
  id::Screen consentScreen;
  id::Language consentLanguage;
  id::version::VendorList vendorListVersion;
  Encoding encodingType;
};
#endiv
#divert <ipp>
tunitas::butano::tcf::consent::object::Defaultable::Defaultable()
  : version()
  , created(protocol::Time())
  , lastUpdated(protocol::Time())
  , cmpId()
  , cmpVersion()
  , consentScreen()
  , consentLanguage()
  , vendorListVersion()
  , encodingType(Encoding())
{ }
#endiv
